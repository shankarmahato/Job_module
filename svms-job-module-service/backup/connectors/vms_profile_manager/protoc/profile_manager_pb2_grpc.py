# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import profile_manager_pb2 as profile__manager__pb2


class ProfileStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getUserInfo = channel.unary_unary(
                '/ProfileManager.Profile/getUserInfo',
                request_serializer=profile__manager__pb2.UserInfoRequest.SerializeToString,
                response_deserializer=profile__manager__pb2.UserInfoResponse.FromString,
                )
        self.createUser = channel.unary_unary(
                '/ProfileManager.Profile/createUser',
                request_serializer=profile__manager__pb2.UserCreateRequest.SerializeToString,
                response_deserializer=profile__manager__pb2.UserInfoResponse.FromString,
                )


class ProfileServicer(object):
    """Missing associated documentation comment in .proto file"""

    def getUserInfo(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createUser(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProfileServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getUserInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.getUserInfo,
                    request_deserializer=profile__manager__pb2.UserInfoRequest.FromString,
                    response_serializer=profile__manager__pb2.UserInfoResponse.SerializeToString,
            ),
            'createUser': grpc.unary_unary_rpc_method_handler(
                    servicer.createUser,
                    request_deserializer=profile__manager__pb2.UserCreateRequest.FromString,
                    response_serializer=profile__manager__pb2.UserInfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ProfileManager.Profile', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Profile(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def getUserInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProfileManager.Profile/getUserInfo',
            profile__manager__pb2.UserInfoRequest.SerializeToString,
            profile__manager__pb2.UserInfoResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProfileManager.Profile/createUser',
            profile__manager__pb2.UserCreateRequest.SerializeToString,
            profile__manager__pb2.UserInfoResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class AuthenticationStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.authenticate = channel.unary_unary(
                '/ProfileManager.Authentication/authenticate',
                request_serializer=profile__manager__pb2.AuthRequest.SerializeToString,
                response_deserializer=profile__manager__pb2.AuthResponse.FromString,
                )
        self.validateToken = channel.unary_unary(
                '/ProfileManager.Authentication/validateToken',
                request_serializer=profile__manager__pb2.TokenRequest.SerializeToString,
                response_deserializer=profile__manager__pb2.UserInfoResponse.FromString,
                )


class AuthenticationServicer(object):
    """Missing associated documentation comment in .proto file"""

    def authenticate(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def validateToken(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthenticationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'authenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.authenticate,
                    request_deserializer=profile__manager__pb2.AuthRequest.FromString,
                    response_serializer=profile__manager__pb2.AuthResponse.SerializeToString,
            ),
            'validateToken': grpc.unary_unary_rpc_method_handler(
                    servicer.validateToken,
                    request_deserializer=profile__manager__pb2.TokenRequest.FromString,
                    response_serializer=profile__manager__pb2.UserInfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ProfileManager.Authentication', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Authentication(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def authenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProfileManager.Authentication/authenticate',
            profile__manager__pb2.AuthRequest.SerializeToString,
            profile__manager__pb2.AuthResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def validateToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProfileManager.Authentication/validateToken',
            profile__manager__pb2.TokenRequest.SerializeToString,
            profile__manager__pb2.UserInfoResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
